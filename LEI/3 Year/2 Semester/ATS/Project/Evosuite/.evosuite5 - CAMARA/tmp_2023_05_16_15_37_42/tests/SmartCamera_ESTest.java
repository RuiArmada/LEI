/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 14:39:33 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartCamera_ESTest extends SmartCamera_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(0, 0, 0, 0, 1.0, 1.0);
      SmartCamera smartCamera1 = new SmartCamera(0);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(0, smartCamera0.getX());
      assertEquals(0.0, smartCamera1.getTamanho(), 0.01);
      assertFalse(smartCamera1.equals((Object)smartCamera0));
      assertFalse(boolean0);
      assertEquals(0, smartCamera0.getY());
      assertEquals(1.0, smartCamera0.getConsumption(), 0.01);
      assertEquals(1.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0.0, smartCamera1.dailyConsumption(), 0.01);
      assertEquals(0, smartCamera1.getY());
      assertEquals(0, smartCamera1.getX());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(168);
      SmartCamera smartCamera1 = new SmartCamera(smartCamera0);
      smartCamera1.setY(168);
      boolean boolean0 = smartCamera1.equals(smartCamera0);
      assertEquals(168, smartCamera1.getY());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(0, 0, (-3293), 368.52447016118, 0.0);
      SmartCamera smartCamera1 = smartCamera0.clone();
      smartCamera0.setOn(false);
      smartCamera1.turnOff();
      smartCamera0.setX(2268);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(2268, smartCamera0.getX());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.setY(571);
      int int0 = smartCamera0.getY();
      assertEquals(571, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      assertEquals(0, smartCamera0.getY());
      
      smartCamera0.setY((-1289));
      int int0 = smartCamera0.getY();
      assertEquals((-1289), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(0, 0, (-3293), 368.52447016118, 0.0);
      smartCamera0.setX(2268);
      int int0 = smartCamera0.getX();
      assertEquals(2268, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-349));
      smartCamera0.setX((-349));
      int int0 = smartCamera0.getX();
      assertEquals((-349), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      
      smartCamera0.setTamanho((-1289));
      double double0 = smartCamera0.getTamanho();
      assertEquals((-1289.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(1052, 1052, (-513), (-3230), (-3230), (-3230));
      smartCamera0.setConsumption(1052);
      double double0 = smartCamera0.getConsumption();
      assertEquals(1052.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1));
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
      
      smartCamera0.setConsumption((-1.0));
      double double0 = smartCamera0.getConsumption();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(0, 2039, 0, 1209.96344725);
      smartCamera0.setConsumption(1209.96344725);
      double double0 = smartCamera0.dailyConsumption();
      assertEquals(1209.96344725, smartCamera0.getConsumption(), 0.01);
      assertEquals(1209.96344725, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(81);
      smartCamera0.setOn(true);
      smartCamera0.setX(81);
      smartCamera0.setY((-1913));
      smartCamera0.setTamanho(2297);
      double double0 = smartCamera0.dailyConsumption();
      assertEquals(81, smartCamera0.getX());
      assertEquals((-0.355927041), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      assertEquals(0, smartCamera0.getY());
      
      smartCamera0.setY((-1289));
      smartCamera0.clone();
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.setX((-3972));
      smartCamera0.clone();
      assertEquals((-3972), smartCamera0.getX());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      
      smartCamera0.setTamanho((-1289));
      smartCamera0.clone();
      assertEquals(0, smartCamera0.getX());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(566, 566, 566, (-2253.78715469632), 2407.76010308);
      smartCamera0.setInstallationCost(1.0E-9);
      SmartCamera smartCamera1 = smartCamera0.clone();
      assertEquals(2407.76010308, smartCamera1.dailyConsumption(), 0.01);
      assertEquals(566, smartCamera1.getY());
      assertEquals(566, smartCamera1.getX());
      assertTrue(smartCamera1.equals((Object)smartCamera0));
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(2770);
      smartCamera0.setConsumption((-4115.0));
      smartCamera0.clone();
      assertEquals((-4115.0), smartCamera0.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartCamera smartCamera0 = null;
      try {
        smartCamera0 = new SmartCamera((SmartCamera) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      double double0 = smartCamera0.dailyConsumption();
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, smartCamera0.getY());
      assertEquals(0, smartCamera0.getX());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      double double0 = smartCamera0.getConsumption();
      assertEquals(0, smartCamera0.getX());
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0, smartCamera0.getY());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      int int0 = smartCamera0.getY();
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0, smartCamera0.getX());
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-1965), (-1965), (-1965), (-1289), (-1289), 0.0);
      int int0 = smartCamera0.getX();
      assertEquals(0, smartCamera0.getY());
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(566, 566, 566, (-2253.78715469632), 2407.76010308);
      double double0 = smartCamera0.getTamanho();
      assertEquals(0.0, double0, 0.01);
      assertEquals(566, smartCamera0.getY());
      assertEquals(566, smartCamera0.getX());
      assertEquals(2407.76010308, smartCamera0.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(566, 566, 566, (-2252.999245986533), (-2252.999245986533));
      SmartCamera smartCamera1 = new SmartCamera(566, 566, 566, 566);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(0.0, smartCamera0.dailyConsumption(), 0.01);
      assertEquals(0.362642992, smartCamera1.dailyConsumption(), 0.01);
      assertEquals(566, smartCamera0.getX());
      assertEquals(566, smartCamera0.getY());
      assertFalse(smartCamera1.equals((Object)smartCamera0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-3397), (-3397), (-3397), (-3397));
      SmartCamera smartCamera1 = new SmartCamera((-3397), (-3397), 1341, 1341, (-3397));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(1341.0, smartCamera1.getTamanho(), 0.01);
      assertEquals(0, smartCamera1.getX());
      assertFalse(boolean0);
      assertEquals(0.0, smartCamera1.dailyConsumption(), 0.01);
      assertEquals(0, smartCamera0.getY());
      assertEquals(1341, smartCamera1.getY());
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0, smartCamera0.getX());
      assertEquals(0.0, smartCamera1.getConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-3397), (-3397), (-3397), (-3397));
      SmartCamera smartCamera1 = smartCamera0.clone();
      assertEquals(0, smartCamera0.getX());
      
      smartCamera0.setX((-3397));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-3397), (-3397), (-3397), (-3397));
      SmartCamera smartCamera1 = smartCamera0.clone();
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0, smartCamera1.getY());
      assertEquals(0, smartCamera1.getX());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-3397), (-3397), (-3397), (-3397));
      boolean boolean0 = smartCamera0.equals(smartCamera0);
      assertTrue(boolean0);
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0, smartCamera0.getY());
      assertEquals(0, smartCamera0.getX());
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-3397), (-3397), (-3397), (-3397));
      Object object0 = new Object();
      boolean boolean0 = smartCamera0.equals(object0);
      assertEquals(0, smartCamera0.getX());
      assertEquals(0, smartCamera0.getY());
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(0);
      smartCamera0.setTamanho(3470);
      double double0 = smartCamera0.getTamanho();
      assertEquals(3470.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(566, 566, 566, (-2253.78715469632), 2407.76010308);
      String string0 = smartCamera0.toString();
      assertEquals("SmartCamera{ id = 566 | on = true | installationCost = 0.0, x=566, y=566, tamanho=0.0, consumption=2407.76010308}", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera(0);
      boolean boolean0 = smartCamera1.equals(smartCamera0);
      assertFalse(boolean0);
      assertEquals(0, smartCamera1.getX());
      assertEquals(0, smartCamera1.getY());
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
      assertEquals(0, smartCamera0.getY());
      assertEquals(0, smartCamera0.getX());
      assertEquals(0.0, smartCamera1.getConsumption(), 0.01);
      assertEquals(0.0, smartCamera0.getConsumption(), 0.01);
      assertEquals(0.0, smartCamera1.getTamanho(), 0.01);
  }
}
