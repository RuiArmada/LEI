/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 14:34:02 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartSpeaker_ESTest extends SmartSpeaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(588, "", "", 0, (-816.738809));
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      smartSpeaker1.volumeUp();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(1, smartSpeaker1.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setVolume((-1));
      smartSpeaker0.volumeDown();
      assertEquals((-1), smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double(1189);
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(1189, 1189, " | on = ", double0);
      smartSpeaker0.setVolume(1189);
      smartSpeaker0.volumeUp();
      assertEquals(1189, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double((-1784.0848379537));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(0, 0, "J:;gW;b#nLl)4pvo", double0);
      int int0 = smartSpeaker0.getVolume();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      smartSpeaker0.setVolume((-2397));
      int int0 = smartSpeaker0.getVolume();
      assertEquals((-2397), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double((-1367.15275208221));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(1063, (-306.0019453425193), "81doW|BH#Ur}Oi", double0);
      double double1 = smartSpeaker0.getConsumption();
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals((-1367.15275208221), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      smartSpeaker0.getChannel();
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertEquals(10, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("aIe}<1}i>x}zv.", "aIe}<1}i>x}zv.");
      smartSpeaker0.getChannel();
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertEquals(10, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("%Q^0QJ[eGZ c5", (String) null);
      String string0 = smartSpeaker0.getBrand();
      assertEquals(10, smartSpeaker0.getVolume());
      assertNull(string0);
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.getBrand();
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setOn(true);
      smartSpeaker0.volumeUp();
      double double0 = smartSpeaker0.dailyConsumption();
      assertEquals(0.02, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double((-1784.0848379537));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(0, 0, "J:;gW;b#nLl)4pvo", double0);
      double double1 = smartSpeaker0.dailyConsumption();
      assertEquals((-1784.0848379537), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      smartSpeaker0.setVolume((-2397));
      smartSpeaker0.clone();
      assertEquals((-2397), smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double((-1.0));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(87, 87, "", double0);
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals(0, smartSpeaker1.getVolume());
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double((-1636));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((-1636), 0.0, "{OXOPHDKr]e", double0);
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      assertEquals((-1636.0), smartSpeaker0.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(1, "@9KSJsBgM", "", 1, 1);
      smartSpeaker0.turnOn();
      smartSpeaker0.clone();
      assertEquals(1.02, smartSpeaker0.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-1626.1960750780322));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(20, (-1626.1960750780322), (String) null, double0);
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      assertEquals((-1626.1960750780322), smartSpeaker1.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = null;
      try {
        smartSpeaker0 = new SmartSpeaker((SmartSpeaker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = null;
      try {
        smartSpeaker0 = new SmartSpeaker(0, 0, "]O0", (Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      smartSpeaker0.setConsumption(20);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(20.0, smartSpeaker0.getConsumption(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double double0 = new Double((-1784.0848379537));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(0, 0, "J:;gW;b#nLl)4pvo", double0);
      smartSpeaker0.getChannel();
      assertEquals((-1784.0848379537), smartSpeaker0.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double double0 = new Double((-1784.0848379537));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(0, 0, "J:;gW;b#nLl)4pvo", double0);
      smartSpeaker0.getBrand();
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      double double0 = smartSpeaker0.getConsumption();
      assertEquals(0.0, double0, 0.01);
      assertEquals(10, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      int int0 = smartSpeaker0.getVolume();
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertTrue(boolean0);
      assertEquals(0, smartSpeaker1.getVolume());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker("", "n4L!");
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
      assertEquals("", smartSpeaker1.getChannel());
      assertEquals(10, smartSpeaker1.getVolume());
      assertEquals(0.0, smartSpeaker1.getConsumption(), 0.01);
      assertEquals("n4L!", smartSpeaker1.getBrand());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      Double double0 = new Double((-2122.996104));
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(20, 0.02, "yx`2uQM{4G:PJ", double0);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
      assertEquals((-2122.996104), smartSpeaker1.dailyConsumption(), 0.01);
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals(", brand=");
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertEquals(0, smartSpeaker0.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(2, "MD<!J;6!.ig;$)B%,c", "MD<!J;6!.ig;$)B%,c", 2, 2);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      
      smartSpeaker1.setBrand("#dWzD^9p");
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(2, "MD<!J;6!.ig;$)B%,c", "MD<!J;6!.ig;$)B%,c", 2, 2);
      smartSpeaker0.setOn(false);
      double double0 = smartSpeaker0.dailyConsumption();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(2, "MD<!J;6!.ig;$)B%,c", "MD<!J;6!.ig;$)B%,c", 2, 2);
      smartSpeaker0.volumeDown();
      assertEquals(1, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((-3658), "", "", 617, 1496.017679);
      double double0 = smartSpeaker0.getConsumption();
      assertEquals(1496.017679, smartSpeaker0.dailyConsumption(), 0.01);
      assertEquals(1496.017679, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((-1380), "@R", "@R", (-1380), (-1380));
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker0);
      assertEquals(0.0, smartSpeaker0.dailyConsumption(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      smartSpeaker0.setChannel("1TpOp'N],n)vQ&t,+");
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
      assertEquals(10, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((String) null, (String) null);
      String string0 = smartSpeaker0.toString();
      assertEquals("SmartSpeaker{ id = 0 | on = false | installationCost = 0.0, volume=10, channel=null, brand=null, consumption=0.0}", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Double double0 = new Double(0);
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(0, 0, ", brand=", double0);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      assertEquals(0, smartSpeaker1.getVolume());
      
      smartSpeaker1.setVolume(20);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.volumeDown();
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals(0.0, smartSpeaker0.getConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Double double0 = new Double(0);
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(0, 0, ", brand=", double0);
      smartSpeaker0.setVolume(20);
      smartSpeaker0.volumeUp();
      assertEquals(0.4, smartSpeaker0.dailyConsumption(), 0.01);
  }
}
