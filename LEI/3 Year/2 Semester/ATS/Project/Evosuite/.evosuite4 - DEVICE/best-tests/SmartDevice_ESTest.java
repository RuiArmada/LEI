/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 14:37:00 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartDevice_ESTest extends SmartDevice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(241);
      String string0 = smartBulb0.toString();
      assertEquals("SmartBulb{ id = 241 | on = false | installationCost = 0.0, tone=1, dimension=0.0, consumption=0.0}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(0);
      assertTrue(smartCamera0.getOn());
      
      smartCamera0.turnOff();
      boolean boolean0 = smartCamera0.getOn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-949), 0, 0, (-949));
      double double0 = smartCamera0.getInstallationCost();
      assertFalse(smartCamera0.getOn());
      assertEquals((-949), smartCamera0.getID());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(0, 2769, 0.02, (double) 2769);
      smartBulb0.setInstallationCost(2769);
      double double0 = smartBulb0.getInstallationCost();
      assertEquals(2769.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(2, 0.0, 0.0, 0.0);
      int int0 = smartBulb0.getID();
      assertEquals(0.1, smartBulb0.dailyConsumption(), 0.01);
      assertEquals(0.0, smartBulb0.getInstallationCost(), 0.01);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("", (String) null);
      smartSpeaker0.setID((-101));
      int int0 = smartSpeaker0.getID();
      assertEquals((-101), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.equals(smartBulb0);
      assertEquals(0, smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getInstallationCost(), 0.01);
      assertFalse(smartBulb0.getOn());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      Double double0 = new Double(0.0);
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((-1), (-194.8223), "SmartBulb{ id = 0 | on = false | installationCost = 0.0, tone=1, dimension=0.0, consumption=-194.8223}", double0);
      smartSpeaker0.equals(smartBulb0);
      assertEquals((-1), smartSpeaker0.getID());
      assertEquals(0, smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getInstallationCost(), 0.01);
      assertFalse(smartBulb0.getOn());
      assertEquals((-194.8223), smartSpeaker0.getInstallationCost(), 0.01);
      assertFalse(smartSpeaker0.getOn());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      double double0 = smartBulb0.dailyConsumption();
      assertEquals(0, smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getInstallationCost(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-1758));
      double double0 = smartBulb0.dailyConsumption();
      assertEquals((-1758), smartBulb0.getID());
      assertEquals(0.1, double0, 0.01);
      assertEquals(0.0, smartBulb0.getInstallationCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(0, (double) 0, (double) 0, 0.0);
      smartBulb0.setConsumption((-571.7708821631));
      double double0 = smartBulb0.dailyConsumption();
      assertEquals((-571.6708821631), smartBulb0.dailyConsumption(), 0.01);
      assertEquals((-571.6708821631), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      SmartDevice smartDevice0 = smartBulb0.clone();
      assertEquals(0.0, smartBulb0.getInstallationCost(), 0.01);
      assertEquals(0, smartDevice0.getID());
      assertEquals(0.0, smartDevice0.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(2, 1524.366, 1524.366, 3301.97287581703);
      SmartDevice smartDevice0 = smartBulb0.clone();
      assertEquals(1524.366, smartBulb0.getInstallationCost(), 0.01);
      assertEquals(2, smartBulb0.getID());
      assertEquals(1524.366, smartDevice0.getInstallationCost(), 0.01);
      assertTrue(smartDevice0.getOn());
      assertEquals(2, smartDevice0.getID());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double((-173));
      SmartSpeaker smartSpeaker0 = new SmartSpeaker((-173), (-173), "", double0);
      SmartDevice smartDevice0 = smartSpeaker0.clone();
      assertTrue(smartDevice0.equals((Object)smartSpeaker0));
      assertEquals(0.0, smartDevice0.dailyConsumption(), 0.01);
      assertEquals((-173), smartDevice0.getID());
      assertEquals((-173.0), smartSpeaker0.getInstallationCost(), 0.01);
      assertEquals((-173.0), smartDevice0.getInstallationCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-666));
      boolean boolean0 = smartCamera0.getOn();
      assertEquals((-666), smartCamera0.getID());
      assertTrue(boolean0);
      assertEquals(0.0, smartCamera0.getInstallationCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("", (String) null);
      int int0 = smartSpeaker0.getID();
      assertEquals(0, int0);
      assertFalse(smartSpeaker0.getOn());
      assertEquals(0.0, smartSpeaker0.getInstallationCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-1), (double) (-1), (double) (-1), 0.1);
      double double0 = smartBulb0.getInstallationCost();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1), smartBulb0.getID());
      assertEquals(0.0, smartBulb0.dailyConsumption(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-661));
      SmartCamera smartCamera1 = new SmartCamera(1);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertFalse(smartCamera1.equals((Object)smartCamera0));
      assertFalse(smartCamera1.getOn());
      assertEquals(0.0, smartCamera1.getInstallationCost(), 0.01);
      assertFalse(smartCamera0.getOn());
      assertFalse(boolean0);
      assertEquals(1, smartCamera1.getID());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double(14);
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(14, 14, "Mox3pK", double0);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(20, "Mox3pK", "Mox3pK", 20, 14);
      smartSpeaker1.equals(smartSpeaker0);
      assertEquals(20, smartSpeaker1.getID());
      assertEquals(14, smartSpeaker0.getID());
      assertEquals(14.0, smartSpeaker0.getInstallationCost(), 0.01);
      assertTrue(smartSpeaker1.getOn());
      assertTrue(smartSpeaker0.getOn());
      assertEquals(0.0, smartSpeaker1.getInstallationCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((-661));
      assertFalse(smartCamera0.getOn());
      
      smartCamera0.turnOn();
      SmartCamera smartCamera1 = new SmartCamera(1);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertTrue(smartCamera0.getOn());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      assertEquals(0.0, smartBulb0.dailyConsumption(), 0.01);
      
      smartBulb0.setOn(true);
      assertTrue(smartBulb0.getOn());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(0.0, smartSpeaker0.getInstallationCost(), 0.01);
      assertFalse(smartSpeaker1.getOn());
      assertTrue(boolean0);
      assertEquals(0, smartSpeaker1.getID());
  }
}
